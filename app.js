// Generated by CoffeeScript 1.7.1
(function() {
  var DOCROOT, S, fs, getHandler, http, log, mongo, mongoClient, mongoUri, port, postCommand, querystring, server, url;

  http = require('http');

  fs = require('fs');

  mongo = require('mongodb');

  log = console.log;

  url = require('url');

  S = require('string');

  querystring = require('querystring');

  mongoUri = process.env.MONGOHQ_URL || 'mongodb://localhost/mydb';

  mongoClient = mongo.MongoClient;

  DOCROOT = "documents";

  getHandler = function(filepath, req, res) {
    return fs.readFile(filepath, "utf-8", function(err, data) {
      var header;
      if (err) {
        throw err;
      }
      header = {
        "Content-type": ""
      };
      if (S(filepath).endsWith(".css")) {
        header["Content-type"] = "text/css";
      } else if (S(filepath).endsWith(".html")) {
        header["Content-type"] = "text/html";
      } else if (S(filepath).endsWith(".js")) {
        header["Content-type"] = "application/javascript";
      }
      res.writeHead(200, header);
      return res.end(data);
    });
  };

  postCommand = function(command, user, date, desc) {
    return mongoClient.connect(mongoUri, function(err, db) {
      var collection;
      if (err) {
        throw err;
      }
      collection = db.collection('test');
      console.log('removing documents');
      return collection.remove((function(err, result) {
        var oneData;
        if (err) {
          throw err;
        }
        console.log("colelction cleared!");
        oneData = {
          "id": {
            "command": command,
            "user": user,
            "date": date,
            "desc": desc
          }
        };
        return collection.insert(oneData, function(err, docs) {
          if (err) {
            throw err;
          }
          console.log("Just inserted, " + docs.length);
          return collection.find({}).toArray(function(err, docs) {
            if (err) {
              throw err;
            }
            return docs.forEach(function(doc) {
              return console.log("found document:" + doc.id.command);
            });
          });
        });
      }));
    });
  };

  server = http.createServer(function(req, res) {
    var filepath, isIgnore, params, pathname, query;
    filepath = '';
    isIgnore = false;
    pathname = url.parse(req.url).pathname;
    console.log("pathname=" + pathname);
    if (pathname === '/') {
      filepath = DOCROOT + "/index.html";
      getHandler(filepath, req, res);
    } else if (pathname === '/favicon.ico') {
      res.writeHead(404);
    } else if (pathname === "/postCommand") {
      query = url.parse(req.url).query;
      params = querystring.parse(query);
      console.log(params);
      postCommand(params.command, params.user, params.date, params.desc);
      return res.writeHead(200);
    } else {
      filepath = DOCROOT + req.url;
      getHandler(filepath, req, res);
    }
  });

  port = process.env.PORT || 5000;

  server.listen(port, function() {
    return console.log("http server listening on port " + server.address().port);
  });

}).call(this);
